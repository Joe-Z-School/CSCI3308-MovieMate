{{> nav}}

<div class="container py-4">
  <div class="row mb-4">
    <div class="col-lg-10 offset-lg-1">
      <h1 class="explore-title text-center mb-4">Discover Movies</h1>
      
      <!-- Search section -->
      <div class="search-container bg-white p-4 rounded-4 shadow-sm mb-4 animate-fade-in">
        <form id="searchForm" class="mb-3">
          <div class="input-group">
            <input 
              type="text" 
              id="searchInput" 
              class="form-control"
              placeholder="Search movies..." 
              aria-label="Search movies">
            <button class="btn search-btn" type="submit">
              <i class="bi bi-search me-1"></i> Search
            </button>
          </div>
        </form>
        
        <div class="d-flex justify-content-between align-items-center">
          <div class="filters d-flex gap-2">
            <select id="yearFilter" class="form-select filter-select">
              <option selected value="">All Years</option>
              <option value="2025">2025</option>
              <option value="2024">2024</option>
              <option value="2023">2023</option>
              <option value="2022">2022</option>
              <option value="2021">2021</option>
              <option value="2020">2020</option>
            </select>
            
            <select id="typeFilter" class="form-select filter-select">
              <option selected value="">All Types</option>
              <option value="movie">Movies</option>
              <option value="series">TV Series</option>
              <option value="episode">Episodes</option>
            </select>
          </div>
          <button id="advancedSearchToggle" class="btn btn-outline-secondary">
            <i class="bi bi-sliders me-1"></i> Filters
          </button>
        </div>
        
        <div id="advancedSearchOptions" class="mt-3 animate-slide" style="display: none; max-height: 0; overflow: hidden;">
          <div class="row g-3">
            <div class="col-md-4">
              <label for="genreFilter" class="form-label">Genre</label>
              <select id="genreFilter" class="form-select">
                <option selected value="">All Genres</option>
                <option value="action">Action</option>
                <option value="adventure">Adventure</option>
                <option value="comedy">Comedy</option>
                <option value="drama">Drama</option>
                <option value="horror">Horror</option>
                <option value="sci-fi">Sci-Fi</option>
                <option value="thriller">Thriller</option>
              </select>
            </div>
            <div class="col-md-4">
              <label for="directorFilter" class="form-label">Director</label>
              <input type="text" id="directorFilter" class="form-control" placeholder="Director name">
            </div>
            <div class="col-md-4">
              <label for="actorFilter" class="form-label">Actor</label>
              <input type="text" id="actorFilter" class="form-control" placeholder="Actor name">
            </div>
          </div>
        </div>
      </div>
      
      <!-- Popular searches / quick filters -->
      <div class="quick-filters mb-4 animate-fade-in" style="animation-delay: 0.1s;">
        <h5 class="mb-3">Popular Searches</h5>
        <div class="d-flex flex-wrap gap-2">
          <button class="btn popular-search-pill" data-search="Top Gun: Maverick">Top Gun: Maverick</button>
          <button class="btn popular-search-pill" data-search="Oppenheimer">Oppenheimer</button>
          <button class="btn popular-search-pill" data-search="Barbie">Barbie</button>
          <button class="btn popular-search-pill" data-search="Dune">Dune</button>
          <button class="btn popular-search-pill" data-search="Inside Out">Inside Out</button>
          <button class="btn popular-search-pill" data-search="Star Wars">Star Wars</button>
        </div>
      </div>
      
      <!-- Results section -->
      <div id="resultsSection" class="results-container d-none animate-fade-in">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h2 class="results-title mb-0">Search Results</h2>
          <div class="sort-by d-flex align-items-center">
            <span class="me-2">Sort by:</span>
            <select id="sortOptions" class="form-select">
              <option value="relevance">Relevance</option>
              <option value="year">Year</option>
              <option value="title">Title</option>
              <option value="rating">Rating</option>
            </select>
          </div>
        </div>
        
        <div id="resultsContainer" class="row row-cols-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6 g-3">
          <!-- Search results will be inserted here -->
        </div>
        
        <div id="loadingIndicator" class="text-center my-5 d-none pulse-animation">
          <div class="spinner" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          <p class="mt-3">Searching for movies...</p>
        </div>
        
        <div id="noResultsMessage" class="text-center py-5 d-none animate-fade-in">
          <div class="no-results-icon mb-3">
            <i class="bi bi-film"></i>
          </div>
          <h3>No movies found</h3>
          <p class="text-muted">Try a different search term or adjust your filters</p>
        </div>
        
        <div class="text-center mt-4 mb-5">
          <button id="loadMoreBtn" class="btn btn-outline-primary d-none">
            Load More Results
          </button>
        </div>
      </div>
      
      <!-- Initial state / trending movies -->
      <div id="trendingSection" class="animate-fade-in" style="animation-delay: 0.2s;">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h2 class="section-title mb-0">Trending Now</h2>
          <div class="trending-tabs">
            <button class="tab-btn active" data-tab="popular">Popular</button>
            <button class="tab-btn" data-tab="latest">Latest</button>
            <button class="tab-btn" data-tab="recommended">For You</button>
          </div>
        </div>
        
        <div id="trendingContainer" class="row row-cols-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6 g-3">
          <!-- Trending movies will be loaded here -->
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Purple color scheme based on existing app */
  :root {
    --primary-purple: #5F4B8B;
    --secondary-purple: #C4C3E3;
    --light-purple: #E9E8F7;
    --dark-purple: #4a3a6d;
    --accent-purple: #9683C3;
  }
  
  body {
    background-color: var(--secondary-purple);
  }
  
  /* Animations */
  .animate-fade-in {
    animation: fadeIn 0.5s ease forwards;
    opacity: 0;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .animate-slide {
    transition: max-height 0.3s ease, padding 0.3s ease, opacity 0.3s ease;
    opacity: 0;
  }
  
  .animate-slide.show {
    opacity: 1;
    max-height: 300px !important;
    padding: 15px;
    border-top: 1px solid #eee;
  }
  
  /* Pulse animation for loading */
  .pulse-animation {
    animation: pulse 1.5s infinite;
  }
  
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
  
  /* Custom spinner */
  .spinner {
    display: inline-block;
    width: 50px;
    height: 50px;
    border: 3px solid rgba(95, 75, 139, 0.3);
    border-radius: 50%;
    border-top-color: var(--primary-purple);
    animation: spin 1s ease-in-out infinite;
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  /* No results icon */
  .no-results-icon {
    font-size: 3rem;
    color: var(--primary-purple);
    opacity: 0.5;
  }
  
  /* Titles */
  .explore-title {
    color: var(--primary-purple);
    font-weight: 700;
    letter-spacing: -0.5px;
  }
  
  .section-title {
    color: var(--primary-purple);
    font-weight: 600;
    letter-spacing: -0.5px;
  }
  
  /* Search elements */
  .search-container {
    background-color: #fff;
    border-radius: 12px;
    transition: box-shadow 0.3s ease;
  }
  
  .search-container:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .search-btn {
    background-color: var(--primary-purple);
    color: white;
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;
    padding: 8px 20px;
    transition: background-color 0.2s ease;
  }
  
  .search-btn:hover {
    background-color: var(--dark-purple);
    color: white;
  }
  
  .filter-select {
    border-color: #dee2e6;
    color: #495057;
    border-radius: 8px;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
  }
  
  .filter-select:focus {
    border-color: var(--accent-purple);
    box-shadow: 0 0 0 0.25rem rgba(150, 131, 195, 0.25);
  }
  
  .popular-search-pill {
    background-color: var(--light-purple);
    color: var(--primary-purple);
    border: 1px solid var(--accent-purple);
    border-radius: 20px;
    padding: 6px 16px;
    transition: all 0.3s ease;
  }
  
  .popular-search-pill:hover {
    background-color: var(--accent-purple);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 3px 8px rgba(95, 75, 139, 0.2);
  }
  
  /* Trending tabs */
  .trending-tabs {
    display: flex;
    gap: 5px;
  }
  
  .tab-btn {
    background: none;
    border: none;
    padding: 8px 16px;
    color: #6c757d;
    border-radius: 20px;
    font-size: 0.9rem;
    transition: all 0.2s ease;
  }
  
  .tab-btn:hover {
    color: var(--primary-purple);
  }
  
  .tab-btn.active {
    background-color: var(--light-purple);
    color: var(--primary-purple);
    font-weight: 600;
  }
  
  /* Movie cards */
  .movie-card {
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    cursor: pointer;
    height: 100%;
    background-color: white;
  }
  
  .movie-card:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);
  }
  
  .movie-poster {
    width: 100%;
    aspect-ratio: 2/3;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .movie-card:hover .movie-poster {
    transform: scale(1.05);
  }
  
  .movie-info {
    padding: 12px;
    position: relative;
    background-color: white;
  }
  
  .movie-title {
    font-weight: 600;
    margin-bottom: 4px;
    font-size: 0.9rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    color: #333;
    transition: color 0.2s ease;
  }
  
  .movie-card:hover .movie-title {
    color: var(--primary-purple);
  }
  
  .movie-year-rating {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 5px;
  }
  
  .movie-year {
    color: #6c757d;
    font-size: 0.8rem;
  }
  
  .movie-rating {
    background-color: var(--primary-purple);
    color: white;
    font-size: 0.75rem;
    padding: 2px 8px;
    border-radius: 4px;
    font-weight: 600;
    display: flex;
    align-items: center;
    transition: transform 0.2s ease;
  }
  
  .movie-card:hover .movie-rating {
    transform: scale(1.1);
  }
  
  .movie-rating i {
    color: #ffc107;
    margin-right: 3px;
    font-size: 0.85rem;
  }
  
  .movie-card .watchlist-btn {
    position: absolute;
    top: 8px;
    right: 8px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    color: #6c757d;
    opacity: 0;
    transform: translateY(-5px);
    transition: all 0.3s ease;
    z-index: 2;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  .movie-card:hover .watchlist-btn {
    opacity: 1;
    transform: translateY(0);
  }
  
  .watchlist-btn:hover {
    background-color: var(--primary-purple);
    color: white;
    transform: scale(1.1) !important;
  }
  
  /* Skeleton loading animation */
  .movie-card.skeleton .movie-poster-placeholder {
    background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);
    background-size: 200% 100%;
    animation: shine 1.5s linear infinite;
  }
  
  @keyframes shine {
    to {
      background-position-x: -200%;
    }
  }
  
  .movie-poster-placeholder {
    background-color: #e9ecef;
    width: 100%;
    aspect-ratio: 2/3;
  }
  
  .movie-info-placeholder {
    padding: 12px;
  }
  
  .placeholder-title {
    height: 16px;
    background-color: #e9ecef;
    width: 85%;
    margin-bottom: 8px;
    border-radius: 4px;
  }
  
  .placeholder-year {
    height: 12px;
    background-color: #e9ecef;
    width: 40%;
    border-radius: 4px;
  }
  
  /* Buttons */
  #loadMoreBtn {
    color: var(--primary-purple);
    border-color: var(--primary-purple);
    border-radius: 8px;
    padding: 8px 24px;
    transition: all 0.3s ease;
  }
  
  #loadMoreBtn:hover {
    background-color: var(--primary-purple);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(95, 75, 139, 0.3);
  }
  
  /* Responsive adjustments */
  @media (max-width: 767.98px) {
    .results-title {
      font-size: 1.5rem;
    }
    
    .sort-by span {
      display: none;
    }
    
    .trending-tabs {
      display: flex;
      overflow-x: auto;
      white-space: nowrap;
      padding-bottom: 5px;
      margin-left: -10px;
    }
    
    .tab-btn {
      flex: 0 0 auto;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Variables for pagination and loading
  let page = 1;
  let isLoading = false;
  let currentQuery = '';

  // Toggle advanced search options
  const advancedSearchToggle = document.getElementById('advancedSearchToggle');
  const advancedSearchOptions = document.getElementById('advancedSearchOptions');
  
  advancedSearchToggle.addEventListener('click', function() {
    if (!advancedSearchOptions.classList.contains('show')) {
      advancedSearchOptions.style.display = 'block';
      setTimeout(() => {
        advancedSearchOptions.classList.add('show');
      }, 10);
      advancedSearchToggle.innerHTML = '<i class="bi bi-x-lg me-1"></i> Hide Filters';
    } else {
      advancedSearchOptions.classList.remove('show');
      setTimeout(() => {
        advancedSearchOptions.style.display = 'none';
      }, 300);
      advancedSearchToggle.innerHTML = '<i class="bi bi-sliders me-1"></i> Filters';
    }
  });
  
  // Handle tab switching
  const tabButtons = document.querySelectorAll('.tab-btn');
  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Remove active class from all tabs
      tabButtons.forEach(btn => btn.classList.remove('active'));
      // Add active class to clicked tab
      this.classList.add('active');
      
      // In a real app, you would load different content based on the tab
      const tabType = this.getAttribute('data-tab');
      console.log(`Loading ${tabType} movies...`);
      
      // For demo, we'll just reload the trending movies with a delay
      const trendingContainer = document.getElementById('trendingContainer');
      // Add skeleton loading effect
      trendingContainer.innerHTML = '';
      for (let i = 0; i < 6; i++) {
        trendingContainer.innerHTML += `
          <div class="col">
            <div class="movie-card skeleton">
              <div class="movie-poster-placeholder"></div>
              <div class="movie-info-placeholder">
                <div class="placeholder-title"></div>
                <div class="placeholder-year"></div>
              </div>
            </div>
          </div>
        `;
      }
      
      // Load new trending movies after delay
      setTimeout(() => loadTrendingMovies(tabType), 1000);
    });
  });
  
  // Handle popular search pills
  const popularSearchButtons = document.querySelectorAll('.popular-search-pill');
  popularSearchButtons.forEach(button => {
    button.addEventListener('click', function() {
      const searchTerm = this.getAttribute('data-search');
      document.getElementById('searchInput').value = searchTerm;
      resetSearch();
      performSearch(searchTerm, 1);
    });
  });
  
  // Search form submission
  const searchForm = document.getElementById('searchForm');
  const searchInput = document.getElementById('searchInput');
  
  searchForm.addEventListener('submit', function(e) {
    e.preventDefault();
    const searchTerm = searchInput.value.trim();
    if (searchTerm) {
      resetSearch();
      performSearch(searchTerm, 1);
    }
  });
  
  // Load trending movies on page load
  loadTrendingMovies('popular');
  
  // Reset search state
  function resetSearch() {
    page = 1;
    currentQuery = searchInput.value.trim();
    document.getElementById('resultsContainer').innerHTML = '';
  }
  
  // Main search function
  function performSearch(query, currentPage = 1) {
    if (isLoading) {
      return; // Prevent multiple simultaneous searches
    }
    
    const yearFilter = document.getElementById('yearFilter').value;
    const typeFilter = document.getElementById('typeFilter').value;
    
    // Show loading state
    isLoading = true;
    document.getElementById('loadingIndicator').classList.remove('d-none');
    document.getElementById('noResultsMessage').classList.add('d-none');
    document.getElementById('loadMoreBtn').classList.add('d-none');
    
    // Hide trending section and show results section
    document.getElementById('trendingSection').classList.add('d-none');
    document.getElementById('resultsSection').classList.remove('d-none');
    
    // Build the API URL with query parameters
    let apiUrl = `/api/movies/search?query=${encodeURIComponent(query)}&page=${currentPage}`;
    
    if (yearFilter) {
      apiUrl += `&year=${yearFilter}`;
    }
    
    if (typeFilter) {
      apiUrl += `&type=${typeFilter}`;
    }
    
    // Fetch results from API
    fetch(apiUrl)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        document.getElementById('loadingIndicator').classList.add('d-none');
        isLoading = false;
        
        if (!data.success || !data.results || data.results.length === 0) {
          document.getElementById('noResultsMessage').classList.remove('d-none');
          return;
        }
        
        // Render results
        renderSearchResults(data.results);
        
        // Show Load More button if there are more results
        if (data.totalResults > currentPage * 10) {
          const loadMoreBtn = document.getElementById('loadMoreBtn');
          loadMoreBtn.classList.remove('d-none');
          loadMoreBtn.onclick = () => {
            page++;
            performSearch(query, page);
          };
        }
      })
      .catch(error => {
        console.error('Error fetching search results:', error);
        document.getElementById('loadingIndicator').classList.add('d-none');
        document.getElementById('noResultsMessage').classList.remove('d-none');
        isLoading = false;
      });
  }
  
  // Render search results
  function renderSearchResults(movies) {
    const resultsContainer = document.getElementById('resultsContainer');
    
    movies.forEach((movie, index) => {
      const movieElement = document.createElement('div');
      movieElement.className = 'col animate-fade-in';
      movieElement.style.animationDelay = `${index * 0.05}s`;
      
      // Default poster image if not available
      const posterUrl = movie.Poster && movie.Poster !== 'N/A' 
        ? movie.Poster 
        : '/api/placeholder/300/450';
      
      // Add random IMDb rating for demo (in real app, you'd use actual data)
     const rating = movie.imdbRating || 'N/A';
      
      movieElement.innerHTML = `
        <div class="movie-card" data-imdb-id="${movie.imdbID}" onclick="location.href='/movies/details/${movie.imdbID}'">
          <div class="poster-container">
            <img src="${posterUrl}" alt="${movie.Title}" class="movie-poster">
            <button class="watchlist-btn" title="Add to watchlist" onclick="event.stopPropagation(); addToWatchlist('${movie.imdbID}', '${movie.Title}', '${posterUrl}')">
              <i class="bi bi-plus-lg"></i>
            </button>
          </div>
          <div class="movie-info">
            <div class="movie-title">${movie.Title}</div>
            <div class="movie-year-rating">
              <div class="movie-year">${movie.Year}</div>
            <div class="movie-rating">
              <i class="bi bi-star-fill"></i> ${rating !== 'N/A' ? rating : '-'}
            </div>
            </div>
          </div>
        </div>
      `;
      
      resultsContainer.appendChild(movieElement);
    });
  }
  
  // Load trending movies
  function loadTrendingMovies(type = 'popular') {
    // This would normally fetch from your API
    // For now, we'll just simulate with sample data
    setTimeout(() => {
      const trendingContainer = document.getElementById('trendingContainer');
      // Clear placeholders
      trendingContainer.innerHTML = '';
      
      // Different movie sets for different tabs (in a real app, you'd fetch these)
      let trendingMovies = [];
      
      if (type === 'popular') {
        trendingMovies = [
          { id: 'tt1745960', title: 'Top Gun: Maverick', year: '2022', rating: '8.3', poster: 'https://via.placeholder.com/300x450.png?text=Top+Gun' },
          { id: 'tt12593682', title: 'Bullet Train', year: '2022', rating: '7.3', poster: 'https://via.placeholder.com/300x450.png?text=Bullet+Train' },
          { id: 'tt6443346', title: 'Black Adam', year: '2022', rating: '6.8', poster: 'https://via.placeholder.com/300x450.png?text=Black+Adam' },
          { id: 'tt9114286', title: 'Black Panther: Wakanda Forever', year: '2022', rating: '7.9', poster: 'https://via.placeholder.com/300x450.png?text=Black+Panther' },
          { id: 'tt1630029', title: 'Avatar: The Way of Water', year: '2022', rating: '8.0', poster: 'https://via.placeholder.com/300x450.png?text=Avatar' },
          { id: 'tt9419884', title: 'Doctor Strange in the Multiverse of Madness', year: '2022', rating: '7.0', poster: 'https://via.placeholder.com/300x450.png?text=Doctor+Strange' }
        ];
      } else if (type === 'latest') {
        trendingMovies = [
          { id: 'tt15239678', title: 'Dune: Part Two', year: '2024', rating: '8.7', poster: 'https://via.placeholder.com/300x450.png?text=Dune+2' },
          { id: 'tt11304740', title: 'Deadpool & Wolverine', year: '2024', rating: '8.5', poster: 'https://via.placeholder.com/300x450.png?text=Deadpool+3' },
          { id: 'tt17024450', title: 'A Quiet Place: Day One', year: '2024', rating: '7.2', poster: 'https://via.placeholder.com/300x450.png?text=A+Quiet+Place' },
          { id: 'tt1517268', title: 'Twisters', year: '2024', rating: '6.9', poster: 'https://via.placeholder.com/300x450.png?text=Twisters' },
          { id: 'tt22687790', title: 'Inside Out 2', year: '2024', rating: '7.8', poster: 'https://via.placeholder.com/300x450.png?text=Inside+Out+2' },
          { id: 'tt13238346', title: 'Kingdom of the Planet of the Apes', year: '2024', rating: '7.1', poster: 'https://via.placeholder.com/300x450.png?text=Planet+of+Apes' }
        ];
      } else if (type === 'recommended') {
        trendingMovies = [
          { id: 'tt1375666', title: 'Inception', year: '2010', rating: '8.8', poster: 'https://via.placeholder.com/300x450.png?text=Inception' },
          { id: 'tt0816692', title: 'Interstellar', year: '2014', rating: '8.7', poster: 'https://via.placeholder.com/300x450.png?text=Interstellar' },
          { id: 'tt0468569', title: 'The Dark Knight', year: '2008', rating: '9.0', poster: 'https://via.placeholder.com/300x450.png?text=Dark+Knight' },
          { id: 'tt0109830', title: 'Forrest Gump', year: '1994', rating: '8.8', poster: 'https://via.placeholder.com/300x450.png?text=Forrest+Gump' },
          { id: 'tt0111161', title: 'The Shawshank Redemption', year: '1994', rating: '9.3', poster: 'https://via.placeholder.com/300x450.png?text=Shawshank' },
          { id: 'tt0133093', title: 'The Matrix', year: '1999', rating: '8.7', poster: 'https://via.placeholder.com/300x450.png?text=The+Matrix' }
        ];
      }
      
      // Render trending movies with staggered animation
      trendingMovies.forEach((movie, index) => {
        const movieElement = document.createElement('div');
        movieElement.className = 'col animate-fade-in';
        movieElement.style.animationDelay = `${index * 0.05}s`;
        
        movieElement.innerHTML = `
          <div class="movie-card" data-imdb-id="${movie.id}" onclick="location.href='/movies/details/${movie.id}'">
            <div class="poster-container">
              <img src="${movie.poster}" alt="${movie.title}" class="movie-poster">
              <button class="watchlist-btn" title="Add to watchlist" onclick="event.stopPropagation(); addToWatchlist('${movie.id}', '${movie.title}', '${movie.poster}')">
                <i class="bi bi-plus-lg"></i>
              </button>
            </div>
            <div class="movie-info">
              <div class="movie-title">${movie.title}</div>
              <div class="movie-year-rating">
                <div class="movie-year">${movie.year}</div>
                <div class="movie-rating">
                  <i class="bi bi-star-fill"></i> ${movie.rating}
                </div>
              </div>
            </div>
          </div>
        `;
        
        trendingContainer.appendChild(movieElement);
      });
    }, 800);
  }
  
  // implement scroll-based loading (reusing Joe's socialscript implementation)
  let debounceTimer;
  window.onscroll = () => {
    clearTimeout(debounceTimer); // Reset debounce timer
    debounceTimer = setTimeout(() => {
      if (!currentQuery || isLoading) return; // Skip if no active search or already loading
      
      const scrollPosition = window.innerHeight + window.scrollY;
      const pageHeight = Math.max(
        document.body.scrollHeight, 
        document.documentElement.scrollHeight,
        document.body.offsetHeight, 
        document.documentElement.offsetHeight
      );
      
      if (scrollPosition >= pageHeight - 500) {
        // Load more results when user is near bottom
        const loadMoreBtn = document.getElementById('loadMoreBtn');
        if (!loadMoreBtn.classList.contains('d-none')) {
          loadMoreBtn.click();
        }
      }
    }, 150);
  };
  
  // Add to watchlist function
  window.addToWatchlist = function(imdbId, title, posterUrl) {
    // Show micro-interaction
    event.target.closest('.watchlist-btn').innerHTML = '<i class="bi bi-check"></i>';
    event.target.closest('.watchlist-btn').style.backgroundColor = '#5F4B8B';
    event.target.closest('.watchlist-btn').style.color = 'white';
    
    fetch('/api/movies/watchlist', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        imdbId: imdbId,
        title: title,
        poster: posterUrl
      }),
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Keep the check mark
        console.log('Added to watchlist:', title);
      } else {
        // Reset button on error
        event.target.closest('.watchlist-btn').innerHTML = '<i class="bi bi-plus-lg"></i>';
        event.target.closest('.watchlist-btn').style.backgroundColor = 'rgba(255, 255, 255, 0.9)';
        event.target.closest('.watchlist-btn').style.color = '#6c757d';
        console.error('Error adding to watchlist');
      }
    })
    .catch(error => {
      // Reset button on error
      event.target.closest('.watchlist-btn').innerHTML = '<i class="bi bi-plus-lg"></i>';
      event.target.closest('.watchlist-btn').style.backgroundColor = 'rgba(255, 255, 255, 0.9)';
      event.target.closest('.watchlist-btn').style.color = '#6c757d';
      console.error('Error adding to watchlist:', error);
    });
  };
});
</script>
          