<style>
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        display: block !important;
        justify-content: unset !important;
    }

    /* Purple buttons */
    .btn-purple {
        background-color: #5F4B8B !important;
        color: white !important;
        border: none !important;
    }

    .btn-purple:hover {
        background-color: #4a3a6d !important;
        color: white !important;
    }

    .post-content {
        background-color: #222;
        color: #fff;
        padding: 10px;
        border-radius: 8px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
    }

    .post-actions {
        color: #ccc;
    }

    .post-action {
        margin-right: 10px;
        cursor: pointer;
    }

   .post-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* Exactly 2 columns */
        gap: 20px;
        margin-top: 20px;
        width: 100%;
        max-width: 1000px;
        padding: 20px;
    }

    /* Style for "Add Post" button */
    .btn-add-post {
        background-color: #5F4B8B;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 5px;
    }

    .btn-add-post:hover {
        background-color: #4a3a6d;
    }

    /* Style for input fields */

    textarea.form-control,
    input.form-control {
        background-color: #222 !important;
        color: #999 !important;
        border: 1px solid #444 !important;
    }

    /* Hide the native file input */
    .custom-file-upload input[type="file"] {
        display: none !important;
    }

    /* Container for the file input */
    .custom-file-upload {
        background-color: #222 !important;
        border: 1px solid #444 !important;
        padding: 12px 16px !important;
        border-radius: 6px !important;
        display: flex !important;
        align-items: center !important;
        gap: 12px !important;
        color: #999 !important;
    }

    /* Style the "Choose File" button (label) */
    .custom-file-upload .file-button {
        background-color: #6f42c1 !important;
        color: white !important;
        padding: 8px 16px !important;
        border-radius: 4px !important;
        cursor: pointer;
        transition: background-color 0.2s ease;
        border: none !important;
        font-size: 0.9rem;
        display: inline-block;
    }

    /* Hover, focus, and active states for the button */
    .custom-file-upload .file-button:hover,
    .custom-file-upload .file-button:focus,
    .custom-file-upload .file-button:active {
        background-color: #000 !important;
        color: #999 !important;
    }

    /* File name styling */
    .file-name-text {
        color: #999 !important;
        font-size: 0.9rem !important;
    }

    /* Optional: Style the file input on focus (but it's hidden, so it's just for UX) */
    input[type="file"]:focus {
        outline: none;
        background-color: #222;
        /* Keep dark */
        color: #999;
        border-color: #6f42c1;
        /* Optional: purple border on focus */
    }

    /* (Alternative) Making the native file button black on hover/focus/click */
    input[type="file"]::file-selector-button:hover,
    input[type="file"]::file-selector-button:active,
    input[type="file"]::file-selector-button:focus {
        background-color: #000 !important;
        color: #999 !important;
    }
</style>

{{> nav}}

<div class="profile-container">
    <div class="profile-header">
        <img src="../../resources/img/{{profile.profile_icon}}" alt="Profile Picture" class="profile-pic">

        <div class="profile-info">
            <h1 class="profile-name">{{profile.first_name}} {{profile.last_name}}</h1>
            <p class="profile-username">@{{profile.username}}</p>
            <div class="profile-bio">
                <p>{{profile.bio}}</p>
            </div>
            {{#if isOwnProfile}}
            <button id="openEditModal" class="btn-edit">Edit Profile</button>
            {{else}}
            {{#if profile.is_following}}
            <button type="button" class="btn btn-outline-danger"
                style="padding: 10px 20px; font-size: 16px; border-radius: 5px;"
                onclick="showUnfollowModal('{{profile.id}}', '{{profile.username}}')">Unfollow</button>
            {{else if profile.is_requested}}
            <button type="button" class="btn btn-warning"
                onclick="showCancelRequestModal('{{profile.id}}', '{{profile.username}}')">
                Requested</button>
            {{else}}
            <form action="/users/follow" method="POST">
                <input type="hidden" name="following_id" value="{{profile.id}}">
                <button type="submit"
                    style="background-color: #5F4B8B; color: white; border: none; padding: 10px 20px; font-size: 16px; border-radius: 5px;">Follow</button>
            </form>
            {{/if}}
            {{/if}}
        </div>
    </div>

    <div class="profile-stats">
        <div class="stat-item">
            <a href="/profile/watchlist?userId={{profile.id}}" style="text-decoration: none; color: inherit;">
                <div class="stat-value">{{watchlistCount}}</div>
                <div class="stat-label" id="followers">Watchlist</div>
            </a>
        </div>
        <div class="stat-item">
            <a href="/profile/followers?userId={{profile.id}}" style="text-decoration: none; color: inherit;">
                <div class="stat-value">{{followersCount}}</div>
                <div class="stat-label" id="followers">Followers</div>
            </a>
        </div>
        <div class="stat-item">
            <a href="/profile/following?userId={{profile.id}}" style="text-decoration: none; color: inherit;">
                <div class="stat-value">{{followingCount}}</div>
                <div class="stat-label" id="following">Following</div>
            </a>
        </div>
    </div>

    <!-- Add Post Button -->
    {{#if isOwnProfile}}
    <button type="button" class="btn btn-purple mt-4" data-bs-toggle="modal" data-bs-target="#postModal">
        Add Post
    </button>
    {{/if}}

    <h3 style="margin-top: 30px;">Recent Posts</h3>
    <div class="post-container">
       {{#each posts}}
       <div class="post-content">
            <a href="#" data-bs-toggle="modal" data-bs-target="#postDetailsModal" onclick="showPostDetails('{{id}}')">
                <img src="{{cover}}" alt="{{title}} cover" style="width: 100%; height: auto; border-radius: 8px; margin-bottom: 10px;">
            </a>
        </div>
    {{/each}}
    </div>

    {{> postDetailsModal}}  <!-- Include post details modal -->

</div>

{{#unless posts.length}}
<p>No posts yet.</p>
{{/unless}}
</div>
</div>
{{#if isOwnProfile}}
{{> edit-profile-modal}}
{{/if}}
{{>follow-modal}}
<!-- Modal HTML for Posting Movie Review -->
<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="postModalLabel">Share Your Movie Thoughts</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!-- Modal Body -->
            <div class="modal-body">
                <form id="moviePostForm" enctype="multipart/form-data">
                    <!-- Movie Title -->
                    <div class="mb-3">
                        <label for="movieTitle" class="form-label text-light">Movie Title</label>
                        <input type="text" class="form-control bg-dark text-light border-secondary" id="movieTitle"
                            placeholder="Enter the movie title" required>
                    </div>

                    <!-- Movie Cover Upload -->
                    <div class="mb-3">
                        <label for="movieCover" class="form-label text-light">Movie Cover</label>
                        <input class="form-control bg-dark text-light border-secondary" type="file" id="movieCover"
                            accept="image/*">
                    </div>

                    <!-- Review -->
                    <div class="mb-3">
                        <label for="movieReview" class="form-label text-light">Review</label>
                        <input type="number" class="form-control bg-dark text-light border-secondary" id="movieReview"
                            placeholder="Rate the movie (1-10)" min="1" max="10" required>
                    </div>

                    <!-- Where to Watch -->
                    <div class="mb-3">
                        <label for="movieWhereToWatch" class="form-label text-light">Where to Watch</label>
                        <input type="text" class="form-control bg-dark text-light border-secondary"
                            id="movieWhereToWatch" placeholder="e.g. Netflix, Hulu, etc." required>
                    </div>

                    <!-- Thoughts -->
                    <div class="mb-3">
                        <label for="movieThoughts" class="form-label text-light">Your Thoughts</label>
                        <textarea class="form-control bg-dark text-light border-secondary" id="movieThoughts" rows="4"
                            placeholder="Write your thoughts here..."></textarea>
                    </div>

                    <!-- Post Button -->
                    <button type="submit" class="btn btn-purple">Post</button>

                </form>
            </div>

        </div>
    </div>
</div>


<!-- Custom JS -->
<script>

    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById('editProfileModal');
        const openBtn = document.getElementById('openEditModal');
        const closeBtn = document.querySelector('.close-modal');

        // Modal open/close functionality
        if (openBtn) {
            openBtn.addEventListener('click', () => modal.style.display = 'block');
        }

        if (closeBtn) {
            closeBtn.addEventListener('click', () => modal.style.display = 'none');
        }

        window.addEventListener('click', (e) => {
            if (e.target === modal) modal.style.display = 'none';
        });

        // Icon selection styling
        document.querySelectorAll('.icon-option input').forEach(radio => {
            radio.addEventListener('change', function () {
                document.querySelectorAll('.icon-option').forEach(opt => {
                    opt.classList.toggle('selected', opt.contains(this));
                });
            });
        });

        // Handle post submission
        document.addEventListener('submit', function (e) {
            if (e.target.id === 'moviePostForm') {
                e.preventDefault();

                const fileInput = document.getElementById('movieCover');
                const thoughts = document.getElementById('movieThoughts').value;

                const reader = new FileReader();
                reader.onload = function (e) {
                    const coverUrl = e.target.result;

                    // Compile and append the new post
                    const source = document.getElementById('movie-post-template').innerHTML;
                    const template = Handlebars.compile(source);
                    const newPostHTML = template({ coverUrl, thoughts });

                    const postContainer = document.querySelector('.post-container');
                    postContainer.insertAdjacentHTML('afterbegin', newPostHTML);

                    // Close modal and reset form
                    const modal = bootstrap.Modal.getInstance(document.getElementById('postModal'));
                    modal.hide();
                    document.getElementById('moviePostForm').reset();
                };

                if (fileInput.files.length > 0) {
                    reader.readAsDataURL(fileInput.files[0]);
                } else {
                    // If no image, still render post
                    const source = document.getElementById('movie-post-template').innerHTML;
                    const template = Handlebars.compile(source);
                    const newPostHTML = template({ thoughts });
                    document.querySelector('.post-container').insertAdjacentHTML('afterbegin', newPostHTML);
                }
            }
        });

        // Handle likes
        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('like-btn')) {
                const countEl = e.target.querySelector('.like-count');
                let count = parseInt(countEl.textContent, 10);
                countEl.textContent = count + 1;
            }
        });

        // Handle comments
        document.addEventListener('keypress', function (e) {
            if (e.target.classList.contains('comment-input') && e.key === 'Enter') {
                const commentList = e.target.closest('.post').querySelector('.comment-list');
                const commentText = e.target.value.trim();
                if (commentText) {
                    const li = document.createElement('li');
                    li.classList.add('list-group-item');
                    li.textContent = commentText;
                    commentList.appendChild(li);
                    e.target.value = '';
                }
            }
        });
    });


// js for post details modal:


// Show post details in the modal
function showPostDetails(postId) {
    // Find the post details for the given postId (you can get this from your post data)
    const post = posts.find(post => post.id === postId);

    // Populate modal with post data
    if (post) {
        document.getElementById('postDetailCover').src = "../../resources/img/" + post.cover;
        document.getElementById('postDetailTitle').innerText = post.title;
        document.getElementById('postDetailReview').innerText = 'Review: ' + post.review;
        document.getElementById('postDetailDescription').innerText = 'Description: ' + post.description;
        document.getElementById('postDetailWhereToWatch').innerText = 'Where to Watch: ' + post.whereToWatch;
    }
}



</script>