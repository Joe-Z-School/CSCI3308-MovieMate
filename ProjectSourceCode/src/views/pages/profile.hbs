<style>
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;

    }
</style>
{{> nav}}
<div class="profile-container">
    <div class="profile-header">
        <img src="../../resources/img/{{profile.profile_icon}}" alt="Profile Picture" class="profile-pic">

        <div class="profile-info">
            <h1 class="profile-name">{{profile.first_name}}</h1>
            <p class="profile-username">@{{profile.username}}</p>
            {{#if isOwnProfile}}
            <button id="openEditModal" class="btn-edit">Edit Profile</button>
            {{else}}
            {{#if is_following}}
            <button type="button" class="btn btn-outline-danger"
                style="padding: 10px 20px; font-size: 16px; border-radius: 5px;"
                onclick="showUnfollowModal('{{id}}', '{{username}}')">Unfollow</button>
            {{else if is_requested}}
            <button type="button" class="btn btn-warning" onclick="showCancelRequestModal('{{id}}', '{{username}}')">
                Requested</button>
            {{else}}
            <form action="/users/follow" method="POST">
                <input type="hidden" name="following_id" value="{{id}}">
                <button type="submit"
                    style="background-color: #5F4B8B; color: white; border: none; padding: 10px 20px; font-size: 16px; border-radius: 5px;">Follow</button>
            </form>
            {{/if}}
            {{/if}}
        </div>
    </div>

    <div class="profile-stats">
        <div class="stat-item">
            <div class="stat-value">{{posts.length}}</div>
            <div class="stat-label">Posts</div>
        </div>
        <div class="stat-item">
            <a href="/profile/followers?userId={{profile.id}}" style="text-decoration: none; color: inherit;">
                <div class="stat-value">{{profile.followers}}</div>
                <div class="stat-label" id="followers">Followers</div>
            </a>
        </div>
        <div class="stat-item">
            <a href="/profile/following?userId={{profile.id}}" style="text-decoration: none; color: inherit;">
                <div class="stat-value">{{profile.following}}</div>
                <div class="stat-label" id="following">Following</div>
            </a>
        </div>
    </div>

    <div class="profile-bio">
        <p>{{profile.bio}}</p>
    </div>

    <div class="post-container">
        <h3>Recent Posts</h3>
        {{#each posts}}
        <div class="post">
            <div class="post-header">
                <div class="post-author">{{../username}}</div>
                <div class="post-date">{{this.date}}</div>
            </div>
            <div class="post-content">
                <p>{{this.content}}</p>
            </div>
            <div class="post-actions">
                <div class="post-action">‚ù§Ô∏è {{this.likes}}</div>
                <div class="post-action">üí¨ {{this.comments}}</div>
            </div>
        </div>
        {{/each}}

        {{#unless posts.length}}
        <p>No posts yet.</p>
        {{/unless}}
    </div>
</div>
{{#if isOwnProfile}}
{{> edit-profile-modal}}
{{/if}}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById('editProfileModal');
        const openBtn = document.getElementById('openEditModal');
        const closeBtn = document.querySelector('.close-modal');

        // Modal open/close functionality
        if (openBtn) {
            openBtn.addEventListener('click', () => modal.style.display = 'block');
        }

        if (closeBtn) {
            closeBtn.addEventListener('click', () => modal.style.display = 'none');
        }

        window.addEventListener('click', (e) => {
            if (e.target === modal) modal.style.display = 'none';
        });

        // Icon selection styling
        document.querySelectorAll('.icon-option input').forEach(radio => {
            radio.addEventListener('change', function () {
                document.querySelectorAll('.icon-option').forEach(opt => {
                    opt.classList.toggle('selected', opt.contains(this));
                });
            });
        });
    });
</script>